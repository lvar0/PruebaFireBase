{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/google-genai';\n\nexport const ai = genkit({\n  plugins: [googleAI({apiKey: process.env.GEMINI_API_KEY})],\n  model: 'googleai/gemini-2.5-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,6KAAA,CAAA,WAAQ,AAAD,EAAE;YAAC,QAAQ,QAAQ,GAAG,CAAC,cAAc;QAAA;KAAG;IACzD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/ai-suggest-figure.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A figure suggestion AI agent.\n *\n * - suggestFigure - A function that handles the figure suggestion process.\n * - SuggestFigureInput - The input type for the suggestFigure function.\n * - SuggestFigureOutput - The return type for the suggestFigure function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestFigureInputSchema = z.object({\n  preferences: z.string().describe('The user preferences.'),\n  availableFigures: z.string().describe('A comma-separated list of available figures.'),\n});\nexport type SuggestFigureInput = z.infer<typeof SuggestFigureInputSchema>;\n\nconst SuggestFigureOutputSchema = z.object({\n  figureSuggestion: z.string().describe('The suggested figure based on the user preferences and available figures.'),\n});\nexport type SuggestFigureOutput = z.infer<typeof SuggestFigureOutputSchema>;\n\nexport async function suggestFigure(input: SuggestFigureInput): Promise<SuggestFigureOutput> {\n  return suggestFigureFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestFigurePrompt',\n  input: {schema: SuggestFigureInputSchema},\n  output: {schema: SuggestFigureOutputSchema},\n  prompt: `Eres un experto en recomendar figuras de colección y siempre respondes en español.\n      \n      Un usuario te dará sus preferencias y también recibirás una lista de las figuras disponibles actualmente en la tienda.\n      \n      Basándote en las preferencias del usuario y las figuras disponibles, sugiere UNA figura específica que le podría gustar y explica brevemente por qué.\n      \n      Preferencias del usuario: \"{{{preferences}}}\"\n      Figuras disponibles: \"{{{availableFigures}}}\"\n      \n      Tu sugerencia debe ser amigable, concisa y siempre en español. Si ninguna figura coincide, explícalo amablemente.`,\n});\n\nconst suggestFigureFlow = ai.defineFlow(\n  {\n    name: 'suggestFigureFlow',\n    inputSchema: SuggestFigureInputSchema,\n    outputSchema: SuggestFigureOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACxC;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACxC;AAGO,eAAe,cAAc,KAAyB;IAC3D,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;;;;;uHAS4G,CAAC;AACxH;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA7BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/suggest/actions.ts"],"sourcesContent":["'use server';\n\nimport { suggestFigure } from '@/ai/flows/ai-suggest-figure';\n\nexport async function getAiSuggestion(preferences: string, availableFigures: string) {\n  try {\n    const result = await suggestFigure({ preferences, availableFigures });\n    return { suggestion: result.figureSuggestion, error: null };\n  } catch (error) {\n    console.error('Error getting AI suggestion:', error);\n    return { suggestion: null, error: 'Could not get a suggestion from the AI.' };\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAEO,eAAe,gBAAgB,WAAmB,EAAE,gBAAwB;IACjF,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,6IAAA,CAAA,gBAAa,AAAD,EAAE;YAAE;YAAa;QAAiB;QACnE,OAAO;YAAE,YAAY,OAAO,gBAAgB;YAAE,OAAO;QAAK;IAC5D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;YAAE,YAAY;YAAM,OAAO;QAA0C;IAC9E;AACF;;;IARsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/suggest/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getAiSuggestion as '606e57ed2a9f266e12029168ac915704c9a145e30b'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase/config.ts"],"sourcesContent":["\nimport { initializeApp, getApps, getApp, type FirebaseOptions } from 'firebase/app';\nimport { getAuth, type Auth } from 'firebase/auth';\nimport { getFirestore, type Firestore } from 'firebase/firestore';\nimport { getStorage, type FirebaseStorage } from 'firebase/storage';\n\nconst firebaseConfig: FirebaseOptions = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nfunction isFirebaseConfigured(config: FirebaseOptions): boolean {\n  return !!(config.apiKey && config.projectId && config.authDomain);\n}\n\nconst isConfigured = isFirebaseConfigured(firebaseConfig);\n\nconst app = isConfigured ? (!getApps().length ? initializeApp(firebaseConfig) : getApp()) : null;\nconst auth: Auth | null = app ? getAuth(app) : null;\nconst db: Firestore | null = app ? getFirestore(app) : null;\nconst storage: FirebaseStorage | null = app ? getStorage(app) : null;\n\nexport { app, auth, db, storage, isConfigured };\n"],"names":[],"mappings":";;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AAEA,MAAM,iBAAkC;IACtC,QAAQ,QAAQ,GAAG,CAAC,4BAA4B;IAChD,YAAY,QAAQ,GAAG,CAAC,gCAAgC;IACxD,WAAW,QAAQ,GAAG,CAAC,+BAA+B;IACtD,eAAe,QAAQ,GAAG,CAAC,mCAAmC;IAC9D,mBAAmB,QAAQ,GAAG,CAAC,wCAAwC;IACvE,OAAO,QAAQ,GAAG,CAAC,2BAA2B;AAChD;AAEA,SAAS,qBAAqB,MAAuB;IACnD,OAAO,CAAC,CAAC,CAAC,OAAO,MAAM,IAAI,OAAO,SAAS,IAAI,OAAO,UAAU;AAClE;AAEA,MAAM,eAAe,qBAAqB;AAE1C,MAAM,MAAM,eAAgB,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD,MAAO;AAC5F,MAAM,OAAoB,MAAM,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE,OAAO;AAC/C,MAAM,KAAuB,MAAM,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE,OAAO;AACvD,MAAM,UAAkC,MAAM,CAAA,GAAA,oLAAA,CAAA,aAAU,AAAD,EAAE,OAAO","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase/firestore.ts"],"sourcesContent":["import { collection, getDocs, doc, setDoc, getDoc, addDoc } from 'firebase/firestore';\nimport { db } from './config';\nimport type { Figure, AppUser } from '@/lib/types';\n\nexport async function getFigures(): Promise<Figure[]> {\n  if (!db) return [];\n  try {\n    const querySnapshot = await getDocs(collection(db, 'figuras'));\n    const figures = querySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    } as Figure));\n    return figures;\n  } catch (error) {\n    console.error(\"Error fetching figures: \", error);\n    return [];\n  }\n}\n\nexport async function addFigure(figureData: Omit<Figure, 'id'>): Promise<string> {\n    if (!db) throw new Error(\"Firebase is not configured.\");\n    const docRef = await addDoc(collection(db, 'figuras'), figureData);\n    return docRef.id;\n}\n\n\nexport async function createUserProfile(userId: string, data: { nombre: string; email: string | null }) {\n  if (!db) throw new Error(\"Firebase is not configured.\");\n  try {\n    await setDoc(doc(db, 'usuarios', userId), data);\n  } catch (error) {\n    console.error('Error creating user profile:', error);\n    throw new Error('Could not create user profile.');\n  }\n}\n\nexport async function getUserProfile(userId: string): Promise<AppUser | null> {\n  if (!db) return null;\n  try {\n    const docRef = doc(db, 'usuarios', userId);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      return { uid: docSnap.id, ...docSnap.data() } as AppUser;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error('Error fetching user profile:', error);\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;AACA;;;AAGO,eAAe;IACpB,IAAI,CAAC,gIAAA,CAAA,KAAE,EAAE,OAAO,EAAE;IAClB,IAAI;QACF,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,gIAAA,CAAA,KAAE,EAAE;QACnD,MAAM,UAAU,cAAc,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,CAAC;gBAC/C,IAAI,IAAI,EAAE;gBACV,GAAG,IAAI,IAAI,EAAE;YACf,CAAW;QACX,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,EAAE;IACX;AACF;AAEO,eAAe,UAAU,UAA8B;IAC1D,IAAI,CAAC,gIAAA,CAAA,KAAE,EAAE,MAAM,IAAI,MAAM;IACzB,MAAM,SAAS,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,gIAAA,CAAA,KAAE,EAAE,YAAY;IACvD,OAAO,OAAO,EAAE;AACpB;AAGO,eAAe,kBAAkB,MAAc,EAAE,IAA8C;IACpG,IAAI,CAAC,gIAAA,CAAA,KAAE,EAAE,MAAM,IAAI,MAAM;IACzB,IAAI;QACF,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,gIAAA,CAAA,KAAE,EAAE,YAAY,SAAS;IAC5C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,eAAe,eAAe,MAAc;IACjD,IAAI,CAAC,gIAAA,CAAA,KAAE,EAAE,OAAO;IAChB,IAAI;QACF,MAAM,SAAS,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,gIAAA,CAAA,KAAE,EAAE,YAAY;QACnC,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,QAAQ,MAAM,IAAI;YACpB,OAAO;gBAAE,KAAK,QAAQ,EAAE;gBAAE,GAAG,QAAQ,IAAI,EAAE;YAAC;QAC9C,OAAO;YACL,OAAO;QACT;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/figure-suggestion-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FigureSuggestionClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call FigureSuggestionClient() from the server but FigureSuggestionClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/figure-suggestion-client.tsx <module evaluation>\",\n    \"FigureSuggestionClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6EACA","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/figure-suggestion-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const FigureSuggestionClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call FigureSuggestionClient() from the server but FigureSuggestionClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/figure-suggestion-client.tsx\",\n    \"FigureSuggestionClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,yDACA","debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/suggest/page.tsx"],"sourcesContent":["import { getFigures } from '@/lib/firebase/firestore';\nimport { FigureSuggestionClient } from '@/components/figure-suggestion-client';\n\nexport default async function SuggestPage() {\n  const figures = await getFigures();\n  const availableFigures = figures.map(f => `${f.nombre} (${f.categoria})`).join(', ');\n\n  return (\n    <div className=\"container py-12\">\n      <FigureSuggestionClient availableFigures={availableFigures || 'No figures available.'} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD;IAC/B,MAAM,mBAAmB,QAAQ,GAAG,CAAC,CAAA,IAAK,GAAG,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;IAE/E,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,oJAAA,CAAA,yBAAsB;YAAC,kBAAkB,oBAAoB;;;;;;;;;;;AAGpE","debugId":null}}]
}